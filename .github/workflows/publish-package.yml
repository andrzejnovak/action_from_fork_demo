# Published a new tag on PyPI, either when first pushed, or the one manually specified.
#
# Settings to configure manually are labeled as # CONFIG
name: publish distributions
on:
  push:
    branches:
    - master
    tags:
    - v*
  pull_request:
    branches:
    - master
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to publish'
        required: true
        default: ''

jobs:
  build-and-publish:
    name: Build and publish Python distro to PyPI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      # Checkout specified tag if ran manually
      if: github.event_name == 'workflow_dispatch'
      with:
        ref: ${{ github.event.inputs.tag }}
      # If ran automatically, do regular checkout
    - uses: actions/checkout@v2
      if: github.event_name != 'workflow_dispatch'

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install build
      run: |
        python -m pip install build

    - name: Build a binary wheel and a source tarball
      run: |
        python -m build

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Make files available as an artifact
      uses: actions/upload-artifact@v2
      with:
        path: dist/*

    - name: Publish distribution ðŸ“¦ to PyPI
      # CONFIG - github.repository
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && github.repository == 'andrzejnovak/action_from_fork_demo'
      uses: pypa/gh-action-pypi-publish@v1.3.1
      with:
        # CONFIG - give pypi_password stored in repo secrets
        password: ${{ secrets.pypi_password }}
        # CONFIG - if pusing to main pypi, remove repository_url
        repository_url: https://test.pypi.org/legacy/

    - name: Publish distribution ðŸ“¦ to PyPI when manually run
      if: github.event_name == 'workflow_dispatch'
      uses: pypa/gh-action-pypi-publish@v1.3.1
      with:
        # CONFIG - give pypi_password stored in repo secrets
        password: ${{ secrets.pypi_password }}
        # CONFIG - if pusing to main pypi, remove repository_url
        repository_url: https://test.pypi.org/legacy/
        